---
import { db, Users } from "astro:db";
import { lucia } from "../lib/lucia";
import { generateId } from "lucia";
import { Argon2id } from "oslo/password";
import Layout from "@/layouts/Layout.astro";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

const message = Astro.url.searchParams.get("message")! || null;
const isProd = import.meta.env.PROD;

if (isProd) {
  return Astro.redirect("/");
}

if (Astro.request.method === "POST") {
  const body = await Astro.request.formData();
  const email = body.get("email");
  const password = body.get("password");

  if (!email || typeof email !== "string") {
    return new Response("Invalid email", {
      status: 400,
    });
  }
  if (!password || typeof password !== "string" || password.length < 6) {
    return new Response("Invalid password", {
      status: 400,
    });
  }

  const hashedPassword = await new Argon2id().hash(password);
  const userId = generateId(15);

  try {
    await db.insert(Users).values({
      id: userId,
      email,
      password_hash: hashedPassword,
    });

    const session = await lucia.createSession(userId, {});
    const sessionCookie = lucia.createSessionCookie(session.id);

    Astro.cookies.set("session", sessionCookie);
    return Astro.redirect("/fines-master");
  } catch (error) {
    return Astro.redirect(`/register?message=${error}`);
  }
}
---

<Layout title="register">
  <Card className="w-full max-w-sm mx-auto my-36">
    <form method="POST">
      <CardHeader>
        <CardTitle className="text-2xl">Register</CardTitle>
        <CardDescription>
          Enter your email below to create to your account.
        </CardDescription>
      </CardHeader>
      <CardContent className="grid gap-4">
        <div class="grid gap-2">
          <Label htmlFor="email">Email</Label>
          <Input
            id="email"
            type="email"
            placeholder="m@example.com"
            required
            name="email"
          />
        </div>
        <div class="grid gap-2">
          <Label htmlFor="password">Password</Label>
          <Input id="password" type="password" name="password" required />
        </div>
      </CardContent>
      <CardFooter>
        <Button className="w-full" type="submit">Register</Button>
      </CardFooter>
    </form>
    {message ? <span>{message}</span> : null}
  </Card>
</Layout>
